- name: install required packages
  apt: pkg={{ item }} state=installed
  with_items:
      - git
      - "{{ gcc }}"
      # to build gtest
      - cmake
      - g++
      # to unzip hda.img.zip
      - unzip
      # to build osc-osd
      - libsqlite3-dev
      # to build qemu with XEN acceleration support
      - libxen-dev
      - zlib1g-dev
      - libgnutls-dev
      - libvncserver-dev
      - libpci-dev
      - libaio-dev
      - sshpass

- name: install packages for SSD monitor
  apt: pkg={{ item }} state=installed
  with_items:
      - libqt3-mt-dev
  when: build_ssd_monitor

- name: check whether gtest was built
  stat: "path={{ ansible_env.HOME }}/gtest/lib/libgtest.a"
  register: libgtest_file

- name: get gtest
  unarchive:
  args:
      src: https://github.com/google/googletest/archive/release-1.7.0.tar.gz
      dest: "{{ ansible_env.HOME }}"
      copy: no
  when: libgtest_file.stat.exists == false

- name: move googletest to gtest
  command: "mv googletest-release-1.7.0 gtest"
  args:
    chdir: "{{ ansible_env.HOME }}"
    creates: "{{ ansible_env.HOME }}/gtest"
  when: libgtest_file.stat.exists == false

- name: create gtest/lib
  file:
  args:
      path: "{{ ansible_env.HOME }}/gtest/lib"
      state: directory
  when: libgtest_file.stat.exists == false

- name: build gtest
  shell: "cmake .. && make"
  args:
    chdir: "{{ ansible_env.HOME }}/gtest/lib"
  when: libgtest_file.stat.exists == false
